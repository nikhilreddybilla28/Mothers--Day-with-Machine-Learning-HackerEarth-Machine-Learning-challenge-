# -*- coding: utf-8 -*-
"""lgbm2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HP0QnCErwDyoPMLA4QFki-dhrVOmDY3D
"""

import pandas as pd
import numpy as np

from sklearn.metrics import f1_score
import numpy as np

def f1_eval(y_pred, dtrain):
    y_true = dtrain.get_label()
    err = 1-f1_score(y_true, np.round(y_pred))
    return 'f1_err', err

xtrain=pd.read_csv('xtrain.csv')
xtrain.shape

y=pd.read_csv('y.csv')
xtest=pd.read_csv('xtest.csv')
y.shape

print(y['sentiment_class'].value_counts())

df2=pd.read_csv('test.csv')

from sklearn.model_selection import train_test_split
X_train, X_val, y_train, y_val  = train_test_split(xtrain,y ,test_size=0.15, random_state=0)

from sklearn.datasets import make_classification
from lightgbm import LGBMClassifier
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import RepeatedStratifiedKFold

"""scale_pos_weight"""

model = LGBMClassifier(boosting_type='gbdt',objective='multiclass',num_class=3,metric='multi_logloss',n_estimators=665,max_depth=8,
                       num_leaves=225,learning_rate=0.3,lambda_l2=0.03,max_bin=525,use_missing=True,min_data_in_leaf=2,
                       random_seed=42,min_data_in_bin=4,bin_construct_sample_cnt=300000,is_unbalance=True,num_trees = 500,num_thread = 12,verbose=0)
cv = RepeatedStratifiedKFold(n_splits=3, n_repeats=3, random_state=1)
n_scores = cross_val_score(model, X_train, y_train, scoring='accuracy', cv=cv, n_jobs=-1, error_score='raise')
print("done")

print('Accuracy: %.3f (%.3f)' % (np.mean(n_scores), np.std(n_scores)))

"""Accuracy: 0.478 (0.009)"""

model.fit(X_train, y_train,eval_metric=f1_eval)

yhat = model.predict(X_val)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_val, yhat)
cm

array([[ 11,  94,  12],
       [ 26, 192,  25],
       [ 15,  91,  20]])
array([[ 16,  94,   7],
       [ 23, 195,  25],
       [ 13, 100,  13]])

y_pred2 = model.predict(xtest)
y_pred2.shape



ID=df2['id']
ID.shape

pred=pd.DataFrame(y_pred2)
datasets=pd.concat([ID,pred], axis=1)

datasets.columns =['id', 'sentiment_class']
datasets.to_csv('lgbm32.csv',index=False)
!cp lgbm32.csv "drive/My Drive/"

print(pred[0].value_counts())

import pickle

lightgbm1 = pickle.dumps(model)

lgbm = pickle.loads(lightgbm1)

from sklearn.externals import joblib

# Save the model as a pickle in a file 
joblib.dump(model, 'lgbm.pkl')

